var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/injectables/AppsflyerService.html",[0,0.494,1,1.031]],["body/injectables/AppsflyerService.html",[0,0.743,1,1.711,2,0.669,3,0.669,4,0.526,5,1.345,6,1.418,7,1.284,8,1.521,9,1.345,10,0.526,11,0.963,12,1.781,13,2.064,14,2.267,15,1.21,16,1.781,17,1.948,18,3.288,19,1.521,20,1.345,21,2.344,22,1.551,23,2.064,24,2.064,25,2.566,26,1.21,27,1.936,28,1.521,29,0.092,30,1.948,31,1.027,32,1.307,33,0.82,34,2.268,35,1.128,36,0.963,37,1.783,38,0.963,39,0.963,40,1.07,41,2.566,42,0.969,43,1.866,44,1.783,45,3.628,46,3.006,47,1.783,48,0.841,49,1.057,50,1.521,51,1.21,52,0.969,53,1.057,54,0.526,55,0.841,56,0.669,57,1.345,58,0.58,59,0.963,60,1.057,61,1.057,62,1.307,63,1.057,64,1.783,65,1.345,66,2.566,67,3.288,68,1.783,69,1.783,70,1.783,71,1.057,72,0.669,73,1.057,74,1.783,75,1.936,76,0.669,77,1.057,78,1.781,79,1.783,80,0.053,81,0.053]],["title/modules/AttributionModule.html",[82,0.82,83,0.82]],["body/modules/AttributionModule.html",[2,0.823,3,0.823,4,0.647,7,1.061,12,1.3,22,1.399,23,1.99,29,0.092,31,0.874,33,0.759,35,1.486,36,1.112,38,0.823,39,0.823,40,0.874,42,0.874,52,1.108,53,1.3,54,0.647,56,1.112,58,0.876,59,0.823,62,1.112,63,1.99,72,1.112,76,0.823,80,0.061,81,0.061,82,0.823,83,1.35,84,1.035,85,2.534,86,2.534,87,1.655,88,1.757,89,0.647,90,1.035,91,1.112,92,0.823,93,1.3,94,1.112,95,1.3,96,0.85,97,1.112,98,1.3,99,0.67,100,1.453,101,1.035,102,1.655,103,1.399,104,1.035,105,0.647,106,2.237,107,1.655,108,0.823,109,1.3,110,1.3,111,2.237,112,1.584,113,1.655,114,1.99,115,2.237]],["title/interfaces/BranchConfigOptions.html",[99,0.494,100,0.82]],["body/interfaces/BranchConfigOptions.html",[2,0.771,3,0.771,4,0.606,6,0.969,7,1.032,10,0.606,11,1.064,12,1.218,22,1.338,23,1.924,29,0.092,31,1.032,32,1.314,33,0.734,35,1.488,36,1.064,38,0.771,39,0.771,40,0.836,42,1.032,52,1.083,53,1.218,54,0.606,56,1.064,58,0.859,59,0.771,62,1.064,63,1.924,72,1.064,76,1.064,80,0.058,81,0.058,83,1.218,84,0.969,85,2.45,86,2.45,87,1.55,88,1.68,89,0.606,90,0.969,91,1.064,92,0.771,93,1.218,94,1.064,95,1.218,96,0.897,97,1.064,98,1.218,99,0.734,100,1.46,101,1.338,102,2.139,103,1.792,104,1.338,105,0.836,106,2.641,107,2.139,108,1.064,109,2.075,110,1.218,111,2.139,112,1.532,113,1.55,114,1.924,115,2.139]],["title/injectables/BranchService.html",[0,0.494,116,1.031]],["body/injectables/BranchService.html",[0,0.534,2,0.362,3,0.362,4,0.284,6,1.47,8,0.944,10,0.284,11,1.28,13,2.316,14,1.669,15,0.751,16,2.169,17,1.55,19,0.944,20,0.727,21,1.846,24,2.066,26,0.751,27,1.201,28,1.55,29,0.092,30,1.55,31,0.771,32,1.28,33,0.704,34,2.125,35,0.886,36,0.886,38,0.598,39,0.598,40,1.185,42,0.953,43,1.675,48,0.96,49,1.206,50,1.206,51,1.114,52,0.919,54,0.284,55,0.455,57,0.727,58,0.218,59,0.362,60,0.571,61,0.571,62,1.333,65,1.782,71,1.4,72,1.057,73,1.846,75,1.782,76,0.598,77,1.4,78,1.766,80,0.033,81,0.033,88,1.55,89,0.284,90,0.455,91,1.212,92,0.362,93,0.571,94,0.598,96,0.919,97,0.362,100,1.169,101,0.751,103,0.455,104,1.114,105,0.697,108,1.169,112,1.114,116,1.114,117,0.727,118,2.363,119,2.363,120,1.782,121,2.363,122,1.782,123,2.363,124,1.593,125,1.593,126,1.57,127,1.593,128,1.593,129,0.964,130,2.125,131,2.63,132,0.964,133,0.964,134,0.964,135,1.593,136,2.125,137,1.973,138,0.964,139,2.066,140,2.363,141,2.022,142,1.201,143,1.201,144,1.201,145,1.201,146,1.201,147,0.964,148,1.593,149,2.125,150,1.782,151,1.782,152,1.201,153,1.846,154,1.4,155,1.973,156,0.964,157,2.125,158,1.201,159,0.886,160,0.964,161,0.944,162,2.98,163,0.964,164,0.964,165,1.593,166,1.593,167,0.964,168,0.964,169,0.964,170,1.593,171,1.593,172,0.727,173,0.964,174,0.964,175,1.201,176,0.727,177,1.593,178,1.593,179,1.593,180,1.593,181,0.964,182,0.964,183,0.964,184,0.964,185,0.964,186,1.593,187,0.964,188,2.616,189,0.964,190,1.593,191,0.727,192,0.964,193,0.727,194,0.964,195,1.593,196,0.964,197,1.593,198,0.964,199,0.964,200,0.964,201,0.727,202,0.964,203,0.964,204,0.964,205,0.964,206,0.964,207,0.964,208,0.964,209,0.964,210,0.964,211,0.964,212,0.964,213,0.964,214,0.964,215,0.964]],["title/interfaces/BranchShareOptions.html",[99,0.494,159,0.82]],["body/interfaces/BranchShareOptions.html",[2,0.737,3,0.737,4,0.579,6,1.619,10,0.579,11,1.031,15,1.296,24,1.878,26,1.619,28,1.164,29,0.091,30,1.164,31,1.203,32,1.442,33,0.444,40,0.579,42,1.232,43,1.619,48,1.296,52,0.935,58,0.444,62,1.189,80,0.056,81,0.056,89,0.579,90,0.926,96,0.776,99,0.621,105,0.81,108,1.031,126,1.766,136,2.59,137,2.59,139,2.393,141,2.219,142,2.073,143,2.073,144,2.073,145,2.073,153,2.503,154,2.034,157,3.046,159,1.031,161,2.219,193,2.59,216,1.481,217,3.923,218,2.748,219,1.964,220,1.964,221,2.748,222,2.748,223,3.433,224,3.433,225,2.748,226,2.748,227,2.073,228,2.748,229,1.628,230,1.964]],["title/coverage.html",[231,2.232]],["body/coverage.html",[0,0.824,1,1.428,4,0.893,5,2.284,29,0.088,31,0.893,56,1.136,80,0.075,81,0.075,84,1.844,94,1.136,97,1.136,99,0.824,100,1.136,116,1.428,117,2.284,159,1.136,216,2.284,231,2.284,232,3.028,233,3.028,234,3.028,235,4.216,236,3.028,237,3.028,238,2.159,239,3.644,240,3.028,241,3.028,242,3.028,243,3.028]],["title/dependencies.html",[244,1.387,245,1.237]],["body/dependencies.html",[7,0.862,29,0.091,33,0.87,51,1.683,54,0.862,55,1.379,80,0.073,81,0.073,89,0.862,91,1.097,92,1.097,96,0.661,105,0.862,126,1.379,229,1.732,245,1.379,246,2.206,247,2.924,248,3.568,249,2.691,250,2.206,251,2.904,252,2.691,253,2.206,254,3.154,255,2.904,256,2.206,257,2.206,258,2.206]],["title/index.html",[10,0.542,259,1.839,260,1.839]],["body/index.html",[0,0.52,1,0.724,7,1.081,8,0.91,9,1.158,11,0.576,13,1.814,14,1.363,15,0.724,16,1.363,17,0.91,19,1.633,21,1.942,22,1.085,26,1.085,29,0.091,32,0.576,33,0.623,38,1.407,39,0.863,40,0.453,42,0.678,43,1.623,50,1.363,51,1.085,52,0.966,54,0.453,55,1.085,58,0.623,59,0.576,60,0.91,61,0.91,71,0.91,72,1.034,73,1.363,76,0.863,77,0.91,78,1.633,80,0.047,81,0.047,83,0.576,89,0.453,91,0.576,92,0.576,96,0.829,101,0.724,103,0.724,104,1.3,105,0.966,108,1.23,109,0.91,112,1.085,116,1.085,120,1.158,122,1.158,126,0.724,130,1.158,131,2.472,139,1.814,141,0.91,146,1.735,149,1.158,150,1.158,151,2.079,152,1.158,153,0.91,154,0.91,155,1.158,158,1.158,159,0.576,161,2.297,172,1.158,175,1.735,176,1.735,191,1.158,201,1.158,227,2.079,229,0.91,244,1.735,245,0.724,246,1.158,249,1.735,250,1.158,251,2.079,252,1.735,253,1.158,254,2.595,255,2.079,256,1.158,257,1.158,258,1.158,261,3.278,262,2.299,263,3.061,264,1.536,265,1.536,266,1.536,267,1.536,268,1.536,269,1.536,270,2.299,271,1.536,272,2.299,273,2.299,274,1.536,275,1.536,276,2.299,277,3.278,278,1.536,279,3.061,280,3.061,281,2.299,282,1.536,283,1.536,284,2.299,285,1.536,286,1.536,287,2.299,288,2.299,289,1.158,290,1.536,291,1.536,292,1.536,293,1.536,294,1.536,295,1.536,296,3.061,297,1.536,298,1.536,299,1.536,300,1.536,301,1.536,302,1.536,303,2.299,304,1.536,305,1.536,306,1.536,307,1.536,308,2.299,309,1.536,310,1.536,311,1.536,312,1.536,313,1.536,314,1.536,315,2.756,316,1.536,317,1.536,318,1.536,319,1.536,320,1.536,321,1.536,322,1.536,323,1.536,324,1.536,325,1.536,326,1.536,327,1.536,328,1.536,329,1.536,330,1.536,331,1.536,332,1.536,333,1.536,334,1.536,335,1.536,336,1.536,337,1.536,338,1.536,339,1.536,340,1.536,341,1.536,342,1.536,343,1.536,344,1.536,345,1.536,346,1.536,347,1.536,348,1.536,349,1.536,350,1.536,351,1.536,352,1.536,353,1.536,354,0.91]],["title/modules.html",[82,1.11]],["body/modules.html",[29,0.08,80,0.08,81,0.08,82,1.276,83,1.276,355,3.4,356,3.4,357,3.4]],["title/overview.html",[354,1.753]],["body/overview.html",[0,0.739,29,0.078,58,0.739,80,0.078,81,0.078,82,1.431,99,0.739,110,1.937,114,1.937,245,1.542,289,2.466,354,1.937,358,3.269,359,3.269,360,3.814,361,3.269,362,3.269,363,3.814]],["title/miscellaneous/variables.html",[238,1.554,364,1.387]],["body/miscellaneous/variables.html",[7,0.931,10,0.931,29,0.084,35,1.543,36,1.402,48,1.762,49,2.214,56,1.493,80,0.076,81,0.076,84,1.489,94,1.402,95,1.871,96,0.714,97,1.493,98,1.871,238,1.871,364,2.382,365,3.736]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":362,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":235,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["1541443185",{"_index":330,"title":{},"body":{"index.html":{}}}],["2",{"_index":363,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":256,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["3/3",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":249,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["4.4.0",{"_index":257,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["5",{"_index":328,"title":{},"body":{"index.html":{}}}],["5.0.0",{"_index":254,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["5.4.0",{"_index":253,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["588028323188499933",{"_index":332,"title":{},"body":{"index.html":{}}}],["588051199941949836",{"_index":336,"title":{},"body":{"index.html":{}}}],["6.0.0",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":302,"title":{},"body":{"index.html":{}}}],["add",{"_index":38,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["addit",{"_index":286,"title":{},"body":{"index.html":{}}}],["analyt",{"_index":141,"title":{},"body":{"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"index.html":{}}}],["android",{"_index":104,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["angular/common",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":54,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"dependencies.html":{},"index.html":{}}}],["app",{"_index":273,"title":{},"body":{"index.html":{}}}],["app.component.t",{"_index":39,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["app.module.t",{"_index":266,"title":{},"body":{"index.html":{}}}],["appid",{"_index":272,"title":{},"body":{"index.html":{}}}],["appsflyer",{"_index":7,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["appsflyer.com",{"_index":275,"title":{},"body":{"index.html":{}}}],["appsflyer_config",{"_index":56,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appsflyerconfig",{"_index":22,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"index.html":{}}}],["appsflyeropt",{"_index":23,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{}}}],["appsflyerservic",{"_index":1,"title":{"injectables/AppsflyerService.html":{}},"body":{"injectables/AppsflyerService.html":{},"coverage.html":{},"index.html":{}}}],["appslfyer",{"_index":283,"title":{},"body":{"index.html":{}}}],["asfsaf",{"_index":333,"title":{},"body":{"index.html":{}}}],["assets/scripts/branch",{"_index":310,"title":{},"body":{"index.html":{}}}],["async",{"_index":16,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["attribution.modul",{"_index":57,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{}}}],["attributionmodul",{"_index":83,"title":{"modules/AttributionModule.html":{}},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"index.html":{},"modules.html":{}}}],["attributionmodule.forroot(appsflyerconfig",{"_index":267,"title":{},"body":{"index.html":{}}}],["avail",{"_index":356,"title":{},"body":{"modules.html":{}}}],["await",{"_index":73,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["b",{"_index":297,"title":{},"body":{"index.html":{}}}],["b[n",{"_index":306,"title":{},"body":{"index.html":{}}}],["b[n]._q",{"_index":307,"title":{},"body":{"index.html":{}}}],["base",{"_index":352,"title":{},"body":{"index.html":{}}}],["below",{"_index":282,"title":{},"body":{"index.html":{}}}],["beta.18",{"_index":255,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["beta.6",{"_index":250,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["boolean",{"_index":106,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{}}}],["bootstrap",{"_index":359,"title":{},"body":{"overview.html":{}}}],["box",{"_index":290,"title":{},"body":{"index.html":{}}}],["branch",{"_index":96,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["branch.io",{"_index":161,"title":{},"body":{"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"index.html":{}}}],["branch_config",{"_index":97,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["branchconfig",{"_index":112,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["branchconfig),th",{"_index":268,"title":{},"body":{"index.html":{}}}],["branchconfigopt",{"_index":100,"title":{"interfaces/BranchConfigOptions.html":{}},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"coverage.html":{}}}],["branchconfigtoken",{"_index":118,"title":{},"body":{"injectables/BranchService.html":{}}}],["branchdata",{"_index":324,"title":{},"body":{"index.html":{}}}],["branchhandl",{"_index":320,"title":{},"body":{"index.html":{}}}],["branchhandleservic",{"_index":277,"title":{},"body":{"index.html":{}}}],["branchio",{"_index":88,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{}}}],["branchioanalyt",{"_index":154,"title":{},"body":{"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"index.html":{}}}],["branchiopromis",{"_index":166,"title":{},"body":{"injectables/BranchService.html":{}}}],["branchioproperti",{"_index":155,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["branchkey",{"_index":109,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"index.html":{}}}],["branchservic",{"_index":116,"title":{"injectables/BranchService.html":{}},"body":{"injectables/BranchService.html":{},"coverage.html":{},"index.html":{}}}],["branchshareopt",{"_index":159,"title":{"interfaces/BranchShareOptions.html":{}},"body":{"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"coverage.html":{},"index.html":{}}}],["branchuniversalobj",{"_index":206,"title":{},"body":{"injectables/BranchService.html":{}}}],["branchuniversalobj.generateshorturl(analyt",{"_index":209,"title":{},"body":{"injectables/BranchService.html":{}}}],["brows",{"_index":357,"title":{},"body":{"modules.html":{}}}],["c",{"_index":300,"title":{},"body":{"index.html":{}}}],["campaign",{"_index":337,"title":{},"body":{"index.html":{}}}],["canonical_url",{"_index":339,"title":{},"body":{"index.html":{}}}],["canonicalidentifi",{"_index":193,"title":{},"body":{"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["case",{"_index":280,"title":{},"body":{"index.html":{}}}],["catch",{"_index":77,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["cdn",{"_index":311,"title":{},"body":{"index.html":{}}}],["chang",{"_index":313,"title":{},"body":{"index.html":{}}}],["channel",{"_index":344,"title":{},"body":{"index.html":{}}}],["checkdata(data",{"_index":326,"title":{},"body":{"index.html":{}}}],["class",{"_index":59,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["click_timestamp",{"_index":329,"title":{},"body":{"index.html":{}}}],["clicked_branch_link",{"_index":334,"title":{},"body":{"index.html":{}}}],["code",{"_index":348,"title":{},"body":{"index.html":{}}}],["config",{"_index":35,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"miscellaneous/variables.html":{}}}],["console.log('[@innomobile/attribut",{"_index":67,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["console.log('[branch",{"_index":176,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["console.log('branch",{"_index":189,"title":{},"body":{"injectables/BranchService.html":{}}}],["console.log(err",{"_index":212,"title":{},"body":{"injectables/BranchService.html":{}}}],["const",{"_index":72,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["constructor(platform",{"_index":20,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{}}}],["contain",{"_index":269,"title":{},"body":{"index.html":{}}}],["content",{"_index":142,"title":{},"body":{"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["contentmetadata",{"_index":136,"title":{},"body":{"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["cordova",{"_index":251,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["correctli",{"_index":353,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":231,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":26,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"index.html":{}}}],["creation_sourc",{"_index":327,"title":{},"body":{"index.html":{}}}],["d",{"_index":304,"title":{},"body":{"index.html":{}}}],["data",{"_index":43,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"index.html":{}}}],["data.data_pars",{"_index":187,"title":{},"body":{"injectables/BranchService.html":{}}}],["data['+clicked_branch_link",{"_index":347,"title":{},"body":{"index.html":{}}}],["debug",{"_index":103,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["declar",{"_index":110,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"overview.html":{}}}],["deep",{"_index":296,"title":{},"body":{"index.html":{}}}],["default",{"_index":48,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"miscellaneous/variables.html":{}}}],["defaultlink",{"_index":217,"title":{},"body":{"interfaces/BranchShareOptions.html":{}}}],["defin",{"_index":24,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["delet",{"_index":69,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["depend",{"_index":245,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["describ",{"_index":350,"title":{},"body":{"index.html":{}}}],["descript",{"_index":6,"title":{},"body":{"injectables/AppsflyerService.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["devkey",{"_index":270,"title":{},"body":{"index.html":{}}}],["directori",{"_index":309,"title":{},"body":{"index.html":{}}}],["document",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["err",{"_index":188,"title":{},"body":{"injectables/BranchService.html":{}}}],["error",{"_index":78,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["event",{"_index":45,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["exampl",{"_index":9,"title":{},"body":{"injectables/AppsflyerService.html":{},"index.html":{}}}],["export",{"_index":58,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"index.html":{},"overview.html":{}}}],["fail",{"_index":223,"title":{},"body":{"interfaces/BranchShareOptions.html":{}}}],["fals",{"_index":50,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"coverage.html":{}}}],["find",{"_index":271,"title":{},"body":{"index.html":{}}}],["follow",{"_index":265,"title":{},"body":{"index.html":{}}}],["forroot(appsflyerconfig",{"_index":113,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{}}}],["function",{"_index":201,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["get",{"_index":259,"title":{"index.html":{}},"body":{}}],["getsess",{"_index":120,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["good",{"_index":278,"title":{},"body":{"index.html":{}}}],["graph",{"_index":355,"title":{},"body":{"modules.html":{}}}],["h",{"_index":301,"title":{},"body":{"index.html":{}}}],["handl",{"_index":315,"title":{},"body":{"index.html":{}}}],["handle.servic",{"_index":319,"title":{},"body":{"index.html":{}}}],["handle.service.t",{"_index":316,"title":{},"body":{"index.html":{}}}],["happen",{"_index":221,"title":{},"body":{"interfaces/BranchShareOptions.html":{}}}],["here",{"_index":349,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/63cc1d35",{"_index":340,"title":{},"body":{"index.html":{}}}],["https://github.com/branchmetrics/web",{"_index":295,"title":{},"body":{"index.html":{}}}],["https://xyz.app.link/army3izrbr",{"_index":343,"title":{},"body":{"index.html":{}}}],["id",{"_index":151,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["identifi",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["identity_id",{"_index":331,"title":{},"body":{"index.html":{}}}],["imag",{"_index":144,"title":{},"body":{"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["implement",{"_index":288,"title":{},"body":{"index.html":{}}}],["import",{"_index":52,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"index.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"injectables/AppsflyerService.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":293,"title":{},"body":{"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["inform",{"_index":287,"title":{},"body":{"index.html":{}}}],["init",{"_index":17,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["initbranchweb",{"_index":121,"title":{},"body":{"injectables/BranchService.html":{}}}],["initi",{"_index":14,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["initializeapp",{"_index":322,"title":{},"body":{"index.html":{}}}],["initsess",{"_index":122,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["initwebsess",{"_index":123,"title":{},"body":{"injectables/BranchService.html":{}}}],["inject",{"_index":0,"title":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{}},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["inject(appsflyer_config",{"_index":64,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["inject(branch_config",{"_index":168,"title":{},"body":{"injectables/BranchService.html":{}}}],["injectiontoken",{"_index":87,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{}}}],["injectiontoken('appsfly",{"_index":95,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('branch",{"_index":98,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"miscellaneous/variables.html":{}}}],["innomobile/attribut",{"_index":261,"title":{},"body":{"index.html":{}}}],["instal",{"_index":263,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":27,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{}}}],["instanceof",{"_index":200,"title":{},"body":{"injectables/BranchService.html":{}}}],["integr",{"_index":262,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":99,"title":{"interfaces/BranchConfigOptions.html":{},"interfaces/BranchShareOptions.html":{}},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"interfaces/BranchShareOptions.html":{},"coverage.html":{},"overview.html":{}}}],["invit",{"_index":338,"title":{},"body":{"index.html":{}}}],["io",{"_index":105,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"dependencies.html":{},"index.html":{}}}],["io/ngx",{"_index":90,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["ionic",{"_index":33,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"dependencies.html":{},"index.html":{}}}],["ionic/angular",{"_index":55,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"dependencies.html":{},"index.html":{}}}],["is_first_sess",{"_index":341,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":292,"title":{},"body":{"index.html":{}}}],["k",{"_index":305,"title":{},"body":{"index.html":{}}}],["key",{"_index":107,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{}}}],["last",{"_index":165,"title":{},"body":{"injectables/BranchService.html":{}}}],["lastuserid",{"_index":119,"title":{},"body":{"injectables/BranchService.html":{}}}],["latest.min.j",{"_index":308,"title":{},"body":{"index.html":{}}}],["legend",{"_index":358,"title":{},"body":{"overview.html":{}}}],["link",{"_index":139,"title":{},"body":{"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"index.html":{}}}],["linkbranchweb",{"_index":124,"title":{},"body":{"injectables/BranchService.html":{}}}],["linkbranchweb(analyt",{"_index":135,"title":{},"body":{"injectables/BranchService.html":{}}}],["liter",{"_index":224,"title":{},"body":{"interfaces/BranchShareOptions.html":{}}}],["log",{"_index":18,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["log(typ",{"_index":41,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["match",{"_index":81,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["memberof",{"_index":63,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{}}}],["messag",{"_index":153,"title":{},"body":{"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"index.html":{}}}],["metadata",{"_index":225,"title":{},"body":{"interfaces/BranchShareOptions.html":{}}}],["method",{"_index":15,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"index.html":{}}}],["miscellan",{"_index":364,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model/branch.interfac",{"_index":167,"title":{},"body":{"injectables/BranchService.html":{}}}],["modul",{"_index":82,"title":{"modules/AttributionModule.html":{},"modules.html":{}},"body":{"modules/AttributionModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":86,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{}}}],["more",{"_index":294,"title":{},"body":{"index.html":{}}}],["n",{"_index":299,"title":{},"body":{"index.html":{}}}],["name",{"_index":30,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["nativ",{"_index":34,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{}}}],["native/appsfly",{"_index":258,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["native/appsflyer/ngx",{"_index":53,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{}}}],["native/branch",{"_index":89,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"dependencies.html":{},"index.html":{}}}],["native/soci",{"_index":92,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"dependencies.html":{},"index.html":{}}}],["need",{"_index":351,"title":{},"body":{"index.html":{}}}],["new",{"_index":94,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngmodul",{"_index":85,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{}}}],["npm",{"_index":264,"title":{},"body":{"index.html":{}}}],["null",{"_index":162,"title":{},"body":{"injectables/BranchService.html":{}}}],["og",{"_index":143,"title":{},"body":{"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["ogdata",{"_index":137,"title":{},"body":{"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["one_time_us",{"_index":335,"title":{},"body":{"index.html":{}}}],["opensharescreen",{"_index":218,"title":{},"body":{"interfaces/BranchShareOptions.html":{}}}],["opensharescreen(subject",{"_index":219,"title":{},"body":{"interfaces/BranchShareOptions.html":{}}}],["opensharescreen?(subject",{"_index":230,"title":{},"body":{"interfaces/BranchShareOptions.html":{}}}],["option",{"_index":32,"title":{},"body":{"injectables/AppsflyerService.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"index.html":{}}}],["options.analyt",{"_index":198,"title":{},"body":{"injectables/BranchService.html":{}}}],["options.canonicalidentifi",{"_index":194,"title":{},"body":{"injectables/BranchService.html":{}}}],["options.contentmetadata",{"_index":195,"title":{},"body":{"injectables/BranchService.html":{}}}],["options.defaultlink",{"_index":204,"title":{},"body":{"injectables/BranchService.html":{}}}],["options.messag",{"_index":197,"title":{},"body":{"injectables/BranchService.html":{}}}],["options.ogdata",{"_index":203,"title":{},"body":{"injectables/BranchService.html":{}}}],["options.opensharescreen",{"_index":199,"title":{},"body":{"injectables/BranchService.html":{}}}],["options.opensharescreen(options.subject",{"_index":205,"title":{},"body":{"injectables/BranchService.html":{}}}],["out",{"_index":289,"title":{},"body":{"index.html":{},"overview.html":{}}}],["overview",{"_index":354,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["packag",{"_index":244,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["param",{"_index":62,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["paramet",{"_index":28,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["pars",{"_index":186,"title":{},"body":{"injectables/BranchService.html":{}}}],["peer",{"_index":246,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["platform",{"_index":21,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["plugin",{"_index":252,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["privat",{"_index":13,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["promis",{"_index":131,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["promise((resolv",{"_index":177,"title":{},"body":{"injectables/BranchService.html":{}}}],["properti",{"_index":11,"title":{},"body":{"injectables/AppsflyerService.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"index.html":{}}}],["provid",{"_index":114,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"overview.html":{}}}],["providedin",{"_index":60,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["public",{"_index":12,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{}}}],["pwa",{"_index":227,"title":{},"body":{"interfaces/BranchShareOptions.html":{},"index.html":{}}}],["r",{"_index":298,"title":{},"body":{"index.html":{}}}],["read",{"_index":346,"title":{},"body":{"index.html":{}}}],["readi",{"_index":284,"title":{},"body":{"index.html":{}}}],["recommend",{"_index":276,"title":{},"body":{"index.html":{}}}],["referring_link",{"_index":342,"title":{},"body":{"index.html":{}}}],["reject",{"_index":178,"title":{},"body":{"injectables/BranchService.html":{}}}],["reject('no_branch_sdk",{"_index":180,"title":{},"body":{"injectables/BranchService.html":{}}}],["reject('no_link",{"_index":214,"title":{},"body":{"injectables/BranchService.html":{}}}],["reject(error",{"_index":183,"title":{},"body":{"injectables/BranchService.html":{}}}],["relat",{"_index":317,"title":{},"body":{"index.html":{}}}],["reset",{"_index":361,"title":{},"body":{"overview.html":{}}}],["resolve(data",{"_index":182,"title":{},"body":{"injectables/BranchService.html":{}}}],["resolve(link",{"_index":215,"title":{},"body":{"injectables/BranchService.html":{}}}],["response1",{"_index":208,"title":{},"body":{"injectables/BranchService.html":{}}}],["response1.url",{"_index":211,"title":{},"body":{"injectables/BranchService.html":{}}}],["result",{"_index":80,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":40,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"index.html":{}}}],["root",{"_index":61,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["s",{"_index":303,"title":{},"body":{"index.html":{}}}],["sdk",{"_index":51,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"dependencies.html":{},"index.html":{}}}],["see",{"_index":281,"title":{},"body":{"index.html":{}}}],["send",{"_index":226,"title":{},"body":{"interfaces/BranchShareOptions.html":{}}}],["servic",{"_index":8,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["services/branch",{"_index":318,"title":{},"body":{"index.html":{}}}],["session",{"_index":130,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["set",{"_index":101,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["setident",{"_index":125,"title":{},"body":{"injectables/BranchService.html":{}}}],["setidentity(userid",{"_index":146,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["share",{"_index":126,"title":{},"body":{"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"dependencies.html":{},"index.html":{}}}],["share(subject",{"_index":152,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["sharelink",{"_index":127,"title":{},"body":{"injectables/BranchService.html":{}}}],["sharelink(opt",{"_index":158,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["sharescreen",{"_index":222,"title":{},"body":{"interfaces/BranchShareOptions.html":{}}}],["sharing/ngx",{"_index":93,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{}}}],["socialshar",{"_index":91,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"dependencies.html":{},"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["src",{"_index":314,"title":{},"body":{"index.html":{}}}],["src/.../attribution.module.t",{"_index":365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/appsflyer/appsflyer.service.t",{"_index":5,"title":{},"body":{"injectables/AppsflyerService.html":{},"coverage.html":{}}}],["src/lib/appsflyer/appsflyer.service.ts:19",{"_index":25,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["src/lib/appsflyer/appsflyer.service.ts:30",{"_index":47,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["src/lib/appsflyer/appsflyer.service.ts:37",{"_index":37,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["src/lib/appsflyer/appsflyer.service.ts:65",{"_index":44,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["src/lib/attribution.module.t",{"_index":84,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/branch/branch.service.t",{"_index":117,"title":{},"body":{"injectables/BranchService.html":{},"coverage.html":{}}}],["src/lib/branch/branch.service.ts:110",{"_index":129,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/lib/branch/branch.service.ts:118",{"_index":147,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/lib/branch/branch.service.ts:136",{"_index":160,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/lib/branch/branch.service.ts:165",{"_index":156,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/lib/branch/branch.service.ts:18",{"_index":163,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/lib/branch/branch.service.ts:189",{"_index":138,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/lib/branch/branch.service.ts:22",{"_index":164,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/lib/branch/branch.service.ts:26",{"_index":128,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/lib/branch/branch.service.ts:47",{"_index":133,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/lib/branch/branch.service.ts:72",{"_index":132,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/lib/branch/branch.service.ts:92",{"_index":134,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/lib/branch/model/branch.interface.t",{"_index":216,"title":{},"body":{"interfaces/BranchShareOptions.html":{},"coverage.html":{}}}],["src/lib/branch/model/branch.interface.ts:51",{"_index":220,"title":{},"body":{"interfaces/BranchShareOptions.html":{}}}],["start",{"_index":260,"title":{"index.html":{}},"body":{}}],["statement",{"_index":234,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":111,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{}}}],["store",{"_index":274,"title":{},"body":{"index.html":{}}}],["string",{"_index":42,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"index.html":{}}}],["subject",{"_index":157,"title":{},"body":{"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["support",{"_index":291,"title":{},"body":{"index.html":{}}}],["tabl",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["text",{"_index":228,"title":{},"body":{"interfaces/BranchShareOptions.html":{}}}],["this.appsflyer.init",{"_index":285,"title":{},"body":{"index.html":{}}}],["this.appsflyer.initsdk(this.appsflyerconfig",{"_index":74,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["this.appsflyer.trackevent(typ",{"_index":79,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["this.appsflyerconfig",{"_index":66,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["this.appsflyerconfig.appid",{"_index":70,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["this.branch.createbranchuniversalobject(properti",{"_index":207,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branch.initsess",{"_index":175,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["this.branch.setdebug(this.branchconfigtoken.debug",{"_index":174,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branch.setidentity(userid",{"_index":191,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["this.branchconfig",{"_index":171,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branchconfig.branchkey",{"_index":184,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branchconfigtoken",{"_index":170,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branchconfigtoken.debug",{"_index":173,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branchhandler.init",{"_index":323,"title":{},"body":{"index.html":{}}}],["this.checkdata(branchdata",{"_index":325,"title":{},"body":{"index.html":{}}}],["this.initbranchweb",{"_index":185,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.initi",{"_index":75,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{}}}],["this.initializeapp",{"_index":321,"title":{},"body":{"index.html":{}}}],["this.initwebsess",{"_index":169,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.lastuserid",{"_index":190,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.linkbranchweb(options.analyt",{"_index":202,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.platform.is('cordova",{"_index":65,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{}}}],["this.platform.is('io",{"_index":68,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["this.platform.readi",{"_index":172,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["this.share(options.subject",{"_index":196,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.socialsharing.sharewithopt",{"_index":210,"title":{},"body":{"injectables/BranchService.html":{}}}],["titl",{"_index":145,"title":{},"body":{"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{}}}],["token",{"_index":36,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":148,"title":{},"body":{"injectables/BranchService.html":{}}}],["tri",{"_index":71,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["true",{"_index":76,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"index.html":{}}}],["type",{"_index":31,"title":{},"body":{"injectables/AppsflyerService.html":{},"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"coverage.html":{}}}],["us",{"_index":279,"title":{},"body":{"index.html":{}}}],["user",{"_index":149,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["userid",{"_index":150,"title":{},"body":{"injectables/BranchService.html":{},"index.html":{}}}],["usevalu",{"_index":115,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{}}}],["valu",{"_index":49,"title":{},"body":{"injectables/AppsflyerService.html":{},"injectables/BranchService.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":238,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":140,"title":{},"body":{"injectables/BranchService.html":{}}}],["viral",{"_index":345,"title":{},"body":{"index.html":{}}}],["void",{"_index":46,"title":{},"body":{"injectables/AppsflyerService.html":{}}}],["want",{"_index":102,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{}}}],["web",{"_index":108,"title":{},"body":{"modules/AttributionModule.html":{},"interfaces/BranchConfigOptions.html":{},"injectables/BranchService.html":{},"interfaces/BranchShareOptions.html":{},"index.html":{}}}],["websit",{"_index":312,"title":{},"body":{"index.html":{}}}],["window['branch",{"_index":179,"title":{},"body":{"injectables/BranchService.html":{}}}],["window['branch'].init(this.branchconfig.branchkey",{"_index":181,"title":{},"body":{"injectables/BranchService.html":{}}}],["window['branch'].link",{"_index":213,"title":{},"body":{"injectables/BranchService.html":{}}}],["window['branch'].setidentity(userid",{"_index":192,"title":{},"body":{"injectables/BranchService.html":{}}}],["x",{"_index":229,"title":{},"body":{"interfaces/BranchShareOptions.html":{},"dependencies.html":{},"index.html":{}}}],["zoom",{"_index":360,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AppsflyerService.html":{"url":"injectables/AppsflyerService.html","title":"injectable - AppsflyerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppsflyerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/appsflyer/appsflyer.service.ts\n        \n\n            \n                Description\n            \n            \n                Appsflyer Service\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appsflyer\n                            \n                            \n                                    Private\n                                initialized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, appsflyer: Appsflyer, appsflyerConfig: AppsflyerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/appsflyer/appsflyer.service.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of AppsflyerService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ionic Platform\n\n                                                        \n                                                \n                                                \n                                                        appsflyer\n                                                  \n                                                        \n                                                                    Appsflyer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ionic Native Appsflyer\n\n                                                        \n                                                \n                                                \n                                                        appsflyerConfig\n                                                  \n                                                        \n                                                                    AppsflyerOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Appsflyer Config token\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/appsflyer/appsflyer.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            initialize Appsflyer - add this to your app.component.ts\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \nlog(type: string, data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/appsflyer/appsflyer.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            Log an Event in Appsflyer\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Name of the event\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                data of your event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    void\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appsflyer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        appsflyer:     Appsflyer\n\n                    \n                \n                    \n                        \n                            Type :     Appsflyer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/appsflyer/appsflyer.service.ts:30\n                            \n                        \n\n                \n                    \n                        Ionic Native Appsflyer\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/appsflyer/appsflyer.service.ts:19\n                            \n                        \n\n                \n                    \n                        Is Appsflyer SDK initialized?\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Appsflyer, AppsflyerOptions } from '@ionic-native/appsflyer/ngx';\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { APPSFLYER_CONFIG } from '../attribution.module';\n\n/**\n * Appsflyer Service\n *\n * @export\n * @class AppsflyerService\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppsflyerService {\n    /**\n     * Is Appsflyer SDK initialized?\n     */\n    private initialized = false;\n\n    /**\n     * Creates an instance of AppsflyerService.\n     * @param {Platform} platform Ionic Platform\n     * @param {Appsflyer} appsflyer Ionic Native Appsflyer\n     * @param {AppsflyerOptions} appsflyerConfig Appsflyer Config token\n     * @memberof AppsflyerService\n     */\n    constructor(\n        private platform: Platform,\n        public appsflyer: Appsflyer,\n        @Optional() @Inject(APPSFLYER_CONFIG) private appsflyerConfig: AppsflyerOptions,\n    ) { }\n\n    /**\n     * initialize Appsflyer - add this to your app.component.ts\n     */\n    async init() {\n        if (!this.platform.is('cordova')) { return; }\n        if (!this.appsflyerConfig) {\n            console.log('[@innomobile/attribution] appsflyer: no config');\n            return;\n        }\n\n        if (!this.platform.is('ios')) {\n            delete this.appsflyerConfig.appId;\n        }\n\n        try {\n            console.log('[@innomobile/attribution] appsflyer: options', this.appsflyerConfig);\n            const data = await this.appsflyer.initSdk(this.appsflyerConfig);\n            console.log('[@innomobile/attribution] appsflyer: Data', data);\n            this.initialized = true;\n        } catch (error) {\n            console.log('[@innomobile/attribution] appsflyer:  error', error);\n        }\n    }\n\n    /**\n     * Log an Event in Appsflyer\n     *\n     * @param {string} type Name of the event\n     * @param {*} data data of your event\n     * @returns void\n     */\n    log(type: string, data: any) {\n        if (!this.initialized) { return; }\n        this.appsflyer.trackEvent(type, data);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AttributionModule.html":{"url":"modules/AttributionModule.html","title":"module - AttributionModule","body":"\n                   \n\n\n\n\n  Modules\n  AttributionModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/attribution.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { BranchIo } from '@ionic-native/branch-io/ngx';\nimport { Appsflyer, AppsflyerOptions } from '@ionic-native/appsflyer/ngx';\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\n\n/**\n * Appsflyer Config Token\n */\nexport const APPSFLYER_CONFIG = new InjectionToken('Appsflyer Config');\n\n/**\n * Branch Config Token\n */\nexport const BRANCH_CONFIG = new InjectionToken('Branch Config');\n\n/**\n * Branch config\n *\n * @export\n * @interface BranchConfigOptions\n */\nexport interface BranchConfigOptions {\n  /**\n   * Set true if you want to debug branch (Android, iOS only)\n   *\n   * @type {boolean}\n   * @memberof BranchConfigOptions\n   */\n  debug?: boolean;\n  /**\n   * Your branch key (Web only)\n   *\n   * @type {string}\n   * @memberof BranchConfigOptions\n   */\n  branchKey?: string;\n}\n\n@NgModule({\n  imports: [\n\n  ],\n  declarations: [\n\n  ],\n  exports: [\n\n  ]\n})\nexport class AttributionModule {\n  /**\n   * Add this to your app.component.ts\n   *\n   * @static\n   * @param {AppsflyerOptions} [appsflyerConfig] Config Appsflyer\n   * @param {BranchConfigOptions} [branchConfig] Config Branch\n   * @returns {ModuleWithProviders}\n   * @memberof AttributionModule\n   */\n  public static forRoot(appsflyerConfig?: AppsflyerOptions, branchConfig?: BranchConfigOptions): ModuleWithProviders {\n    return {\n      ngModule: AttributionModule,\n      providers: [\n        BranchIo,\n        SocialSharing,\n        Appsflyer,\n        { provide: APPSFLYER_CONFIG, useValue: appsflyerConfig },\n        { provide: BRANCH_CONFIG, useValue: branchConfig }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BranchConfigOptions.html":{"url":"interfaces/BranchConfigOptions.html","title":"interface - BranchConfigOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BranchConfigOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/attribution.module.ts\n        \n\n            \n                Description\n            \n            \n                Branch config\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        branchKey\n                                \n                                \n                                            Optional\n                                        debug\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branchKey\n                                    \n                                \n                                \n                                    \n                                        branchKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Your branch key (Web only)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set true if you want to debug branch (Android, iOS only)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { BranchIo } from '@ionic-native/branch-io/ngx';\nimport { Appsflyer, AppsflyerOptions } from '@ionic-native/appsflyer/ngx';\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\n\n/**\n * Appsflyer Config Token\n */\nexport const APPSFLYER_CONFIG = new InjectionToken('Appsflyer Config');\n\n/**\n * Branch Config Token\n */\nexport const BRANCH_CONFIG = new InjectionToken('Branch Config');\n\n/**\n * Branch config\n *\n * @export\n * @interface BranchConfigOptions\n */\nexport interface BranchConfigOptions {\n  /**\n   * Set true if you want to debug branch (Android, iOS only)\n   *\n   * @type {boolean}\n   * @memberof BranchConfigOptions\n   */\n  debug?: boolean;\n  /**\n   * Your branch key (Web only)\n   *\n   * @type {string}\n   * @memberof BranchConfigOptions\n   */\n  branchKey?: string;\n}\n\n@NgModule({\n  imports: [\n\n  ],\n  declarations: [\n\n  ],\n  exports: [\n\n  ]\n})\nexport class AttributionModule {\n  /**\n   * Add this to your app.component.ts\n   *\n   * @static\n   * @param {AppsflyerOptions} [appsflyerConfig] Config Appsflyer\n   * @param {BranchConfigOptions} [branchConfig] Config Branch\n   * @returns {ModuleWithProviders}\n   * @memberof AttributionModule\n   */\n  public static forRoot(appsflyerConfig?: AppsflyerOptions, branchConfig?: BranchConfigOptions): ModuleWithProviders {\n    return {\n      ngModule: AttributionModule,\n      providers: [\n        BranchIo,\n        SocialSharing,\n        Appsflyer,\n        { provide: APPSFLYER_CONFIG, useValue: appsflyerConfig },\n        { provide: BRANCH_CONFIG, useValue: branchConfig }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BranchService.html":{"url":"injectables/BranchService.html","title":"injectable - BranchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BranchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/branch/branch.service.ts\n        \n\n            \n                Description\n            \n            \n                Branch Service\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                branchConfigToken\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                lastUserId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSession\n                            \n                            \n                                    Private\n                                initBranchWeb\n                            \n                            \n                                    Async\n                                initSession\n                            \n                            \n                                    Private\n                                    Async\n                                initWebSession\n                            \n                            \n                                    Private\n                                linkBranchWeb\n                            \n                            \n                                setIdentity\n                            \n                            \n                                    Async\n                                share\n                            \n                            \n                                    Async\n                                shareLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, branch: BranchIo, socialSharing: SocialSharing, branchConfig: BranchConfigOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/branch/branch.service.ts:26\n                            \n                        \n\n                \n                    \n                            Creates an instance of BranchService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ionic\n\n                                                        \n                                                \n                                                \n                                                        branch\n                                                  \n                                                        \n                                                                    BranchIo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ionic Native\n\n                                                        \n                                                \n                                                \n                                                        socialSharing\n                                                  \n                                                        \n                                                                    SocialSharing\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ionic Native\n\n                                                        \n                                                \n                                                \n                                                        branchConfig\n                                                  \n                                                        \n                                                                    BranchConfigOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Branch Config token\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getSession\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSession()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/branch/branch.service.ts:110\n                            \n                        \n\n\n                \n                    \n                            Get Branch Session\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initBranchWeb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initBranchWeb()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/branch/branch.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Get Branch Web SDK\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            initSession\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initSession()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/branch/branch.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Init Branch Session - important add to your app.component.ts\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            initWebSession\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initWebSession()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/branch/branch.service.ts:92\n                            \n                        \n\n\n                \n                    \n                            Init Web Session\n\n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            linkBranchWeb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        linkBranchWeb(analytics, contentMetadata, ogData)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/branch/branch.service.ts:189\n                            \n                        \n\n\n                \n                    \n                            Share link via Web SDK\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        analytics\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Branch analytics\n\n                                                        \n                                                \n                                                \n                                                        contentMetadata\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Branch content data\n\n                                                        \n                                                \n                                                \n                                                        ogData\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                OG Data like image, title and description\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIdentity\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIdentity(userId)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/branch/branch.service.ts:118\n                            \n                        \n\n\n                \n                    \n                            Track a user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                User Id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            share\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        share(subject: string, message: string, analytics: BranchIoAnalytics, properties: BranchIoProperties)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/branch/branch.service.ts:165\n                            \n                        \n\n\n                \n                    \n                            Share Branch link NATIVE (Android and iOS only)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        subject\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Subject\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Message\n\n                                                        \n                                                \n                                                \n                                                        analytics\n                                                        \n                                                                    BranchIoAnalytics\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Branch Analytics Data\n\n                                                        \n                                                \n                                                \n                                                        properties\n                                                        \n                                                                    BranchIoProperties\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Branch Properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            shareLink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shareLink(options: BranchShareOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/branch/branch.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Share a link via Branch.io (Android, iOS, Web)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    BranchShareOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Share options\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            branchConfigToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        branchConfigToken:     BranchConfigOptions\n\n                    \n                \n                    \n                        \n                            Type :     BranchConfigOptions\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/branch/branch.service.ts:26\n                            \n                        \n\n                \n                    \n                        Branch Config token\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/branch/branch.service.ts:18\n                            \n                        \n\n                \n                    \n                        Is branch initialized?\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastUserId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastUserId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/branch/branch.service.ts:22\n                            \n                        \n\n                \n                    \n                        Last user id set to Branch\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport { BranchIo, BranchIoAnalytics, BranchIoPromise, BranchIoProperties } from '@ionic-native/branch-io/ngx';\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\nimport { Platform } from '@ionic/angular';\nimport { BRANCH_CONFIG, BranchConfigOptions } from './../attribution.module';\nimport { BranchShareOptions } from './model/branch.interface';\n\n/**\n * Branch Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BranchService {\n  /**\n   * Is branch initialized?\n   */\n  private initialized = false;\n  /**\n   * Last user id set to Branch\n   */\n  private lastUserId = '';\n  /**\n   * Branch Config token\n   */\n  private branchConfigToken: BranchConfigOptions = null;\n\n  /**\n   * Creates an instance of BranchService.\n   * @param {Platform} platform Ionic\n   * @param {BranchIo} branch Ionic Native\n   * @param {SocialSharing} socialSharing Ionic Native\n   * @param {BranchConfigOptions} branchConfig Branch Config token\n   */\n  constructor(\n    private platform: Platform,\n    private branch: BranchIo,\n    private socialSharing: SocialSharing,\n    @Optional() @Inject(BRANCH_CONFIG) private branchConfig: BranchConfigOptions,\n  ) {\n\n  }\n\n  /**\n   * Init Branch Session - important add to your app.component.ts\n   */\n  async initSession(): Promise {\n    if (!this.platform.is('cordova')) { return this.initWebSession(); }\n    this.branchConfigToken = {\n      debug: false,\n      ...this.branchConfig\n    };\n    await this.platform.ready();\n\n    if (this.branchConfigToken && this.branchConfigToken.debug) {\n      this.branch.setDebug(this.branchConfigToken.debug);\n    }\n\n    try {\n      const data = await this.branch.initSession();\n      this.initialized = true;\n      return data;\n    } catch (error) {\n      console.log('[Branch] Error on init', error);\n      return null;\n    }\n  }\n\n  /**\n   * Get Branch Web SDK\n   */\n  private initBranchWeb(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!window['branch']) {\n        reject('no_branch_sdk');\n      } else {\n        window['branch'].init(this.branchConfig.branchKey, null, (error, data) => {\n          this.initialized = true;\n          if (data) {\n            resolve(data);\n          } else if (error) {\n            reject(error);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Init Web Session\n   */\n  private async initWebSession() {\n    if (!this.branchConfig || !this.branchConfig.branchKey) { return null; }\n\n    try {\n      const data = await this.initBranchWeb();\n      if (data) {\n        const parsed: BranchIoPromise = data.data_parsed;\n        return parsed;\n      }\n    } catch (err) {\n      console.log('BRANCH ERROR', err);\n    }\n    return null;\n  }\n\n  /**\n   * Get Branch Session\n   */\n  async getSession(): Promise {\n    return await this.branch.initSession();\n  }\n\n  /**\n   * Track a user\n   * @param userId User Id\n   */\n  setIdentity(userId): Promise {\n    if (!this.initialized) { return; }\n\n    if (this.lastUserId === userId) { return; }\n\n    this.lastUserId = userId;\n\n    if (this.platform.is('cordova')) {\n      return this.branch.setIdentity(userId);\n    } else {\n      return window['branch'].setIdentity(userId);\n    }\n  }\n\n  /**\n   * Share a link via Branch.io (Android, iOS, Web)\n   * @param options Share options\n   */\n  async shareLink(options: BranchShareOptions) {\n    if (this.platform.is('cordova')) {\n      const properties: BranchIoProperties = {\n        canonicalIdentifier: options.canonicalIdentifier,\n        contentMetadata: options.contentMetadata\n      };\n      return this.share(options.subject, options.message, options.analytics, properties);\n    } else {\n      if (options.openShareScreen instanceof Function) {\n        let link = '';\n        try {\n          link = await this.linkBranchWeb(options.analytics, options.contentMetadata, options.ogData);\n        } catch (error) {\n          link = options.defaultLink;\n        }\n\n        return options.openShareScreen(options.subject, options.message, link);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Share Branch link NATIVE (Android and iOS only)\n   * @param subject Subject\n   * @param message Message\n   * @param analytics Branch Analytics Data\n   * @param properties Branch Properties\n   */\n  async share(subject: string, message: string, analytics: BranchIoAnalytics, properties: BranchIoProperties): Promise {\n    if (!this.platform.is('cordova')) { return; }\n    if (!this.initialized) { return; }\n\n    try {\n      const branchUniversalObj = await this.branch.createBranchUniversalObject(properties);\n      const response1 = await branchUniversalObj.generateShortUrl(analytics, properties);\n\n      return await this.socialSharing.shareWithOptions({\n        message: message + ' ' + response1.url,\n        subject: subject\n      });\n\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  /**\n   * Share link via Web SDK\n   * @param analytics Branch analytics\n   * @param contentMetadata Branch content data\n   * @param ogData OG Data like image, title and description\n   */\n  private linkBranchWeb(analytics, contentMetadata, ogData): Promise {\n    return new Promise((resolve, reject) => {\n      if (!window['branch']) {\n        reject('no_branch_sdk');\n      } else {\n        window['branch'].link({\n          ...analytics,\n          data: {\n            ...contentMetadata,\n            ...ogData,\n          }\n        }, (err, link: string) => {\n          if (!link || err) {\n            reject('no_link');\n          }\n          resolve(link);\n        });\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BranchShareOptions.html":{"url":"interfaces/BranchShareOptions.html","title":"interface - BranchShareOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BranchShareOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/branch/model/branch.interface.ts\n        \n\n            \n                Description\n            \n            \n                Share a link with Branch.io\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        analytics\n                                \n                                \n                                        canonicalIdentifier\n                                \n                                \n                                        contentMetadata\n                                \n                                \n                                            Optional\n                                        defaultLink\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        ogData\n                                \n                                \n                                        subject\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    openShareScreen\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            openShareScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenShareScreen(subject, message, defaultLink)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/branch/model/branch.interface.ts:51\n                            \n                        \n\n\n                \n                    \n                            For Web: What should happen after creating the link - define the ShareScreen\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        subject\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Subject of the message\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Message\n\n                                                        \n                                                \n                                                \n                                                        defaultLink\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Default link if branch fails\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        analytics\n                                    \n                                \n                                \n                                    \n                                        analytics:     BranchIoAnalytics\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BranchIoAnalytics\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Branch.io analytics data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canonicalIdentifier\n                                    \n                                \n                                \n                                    \n                                        canonicalIdentifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Important for iOS\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentMetadata\n                                    \n                                \n                                \n                                    \n                                        contentMetadata:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Branch.io content metadata to send with link\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultLink\n                                    \n                                \n                                \n                                    \n                                        defaultLink:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    PWA only: If branch fails to create the link\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text of sharing message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ogData\n                                    \n                                \n                                \n                                    \n                                        ogData:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    OG data like image, title, description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Subject of sharing message\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { BranchIoAnalytics } from '@ionic-native/branch-io/ngx';\n\n/**\n * Share a link with Branch.io\n */\nexport interface BranchShareOptions {\n\n    /**\n     * Subject of sharing message\n     */\n    subject: string;\n\n    /**\n     * Text of sharing message\n     */\n    message: string;\n\n    /**\n     * Important for iOS\n     */\n    canonicalIdentifier: string;\n\n    /**\n     * Branch.io content metadata to send with link\n     */\n    contentMetadata: {\n        [x: string]: any;\n    };\n    /**\n     * Branch.io analytics data\n     */\n    analytics: BranchIoAnalytics;\n    /**\n     * PWA only: If branch fails to create the link\n     */\n    defaultLink?: string;\n\n    /**\n     * OG data like image, title, description\n     */\n    ogData?: {\n        [x: string]: any;\n    };\n    /**\n     * For Web: What should happen after creating the link - define the ShareScreen\n     * @param subject Subject of the message\n     * @param message Message\n     * @param defaultLink Default link if branch fails\n     */\n    openShareScreen?(subject, message, defaultLink): any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/appsflyer/appsflyer.service.ts\n            \n            \n                injectable\n            \n            \n                AppsflyerService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/lib/attribution.module.ts\n            \n            \n                interface\n            \n            \n                BranchConfigOptions\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/attribution.module.ts\n            \n            \n                variable\n            \n            \n                APPSFLYER_CONFIG\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/attribution.module.ts\n            \n            \n                variable\n            \n            \n                BRANCH_CONFIG\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/branch/branch.service.ts\n            \n            \n                injectable\n            \n            \n                BranchService\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/lib/branch/model/branch.interface.ts\n            \n            \n                interface\n            \n            \n                BranchShareOptions\n            \n            \n                100 %\n                (9/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : >=6.0.0 \n        \n            @angular/core : >=6.0.0 \n        \n            @ionic/angular : ^4.0.0 || >= 4.0.0-beta.6\n        \n            cordova-plugin-x-socialsharing : ^5.4.0\n        \n            @ionic-native/social-sharing : ^5.0.0 || >= 5.0.0-beta.18\n        \n            branch-cordova-sdk : ^3.0.0\n        \n            @ionic-native/branch-io : ^5.0.0 || >= 5.0.0-beta.18\n        \n            cordova-plugin-appsflyer-sdk : ^4.4.0\n        \n            @ionic-native/appsflyer : ^5.0.0 || >= 5.0.0-beta.18\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@innomobile/attribution - Appsflyer and Branch.io\n\nIntegrate Appsflyer\nIntegrate Branch.io\n\nInstallation\nInstall the package:\nnpm i @innomobile/attribution\nInstall peer dependencies\nYou have to install the following packages:\n\n@ionic/angular: ^4.0.0 || >= 4.0.0-beta.6\ncordova-plugin-x-socialsharing: ^5.4.0,\n@ionic-native/social-sharing: ^5.0.0 || >= 5.0.0-beta.18\nbranch-cordova-sdk: ^3.0.0\n@ionic-native/branch-io: ^5.0.0 || >= 5.0.0-beta.18\ncordova-plugin-appsflyer-sdk: ^4.4.0\n@ionic-native/appsflyer: ^5.0.0 || >= 5.0.0-beta.18\n\nAdd to your app.module.ts\n    import { AttributionModule } from '@innomobile/attribution';\n\n    AttributionModule.forRoot(appsflyerConfig, branchConfig),The appsflyerConfig contains the devKey, you find at Appsflyer and the AppId (ID of your app in the App Store)\nexport const appsflyerConfig = {\n    devKey: '', // From appsflyer.com\n    appId: '', // iOS only\n};This is your branchConfig:\nexport const branchConfig = {\n  debug: false, // optional\n  branchKey: '', // From branch.io\n}Initialize Appsflyer and Branch.io\nI recommend to initialize Appsflyer and Branch.io in your app.component.ts. For Branch, a BranchHandleService is good use case (see below). For Appsflyer, add private appslfyer: AppsflyerService to your constructor and after the platform is ready, add this.appsflyer.init().\nAdditional information\nAppsflyer is Android and iOS only. Branch.io is ready for Android, iOS and Web! See use cases for the implementation!\nUse Cases\nAdd Branch.io for Web / PWA\n@innomobile/attribution has out-of-the-box support for a PWA / Web implementation of Branch.io. Just add the Branch JavaScript to your index.html (more information on https://github.com/BranchMetrics/web-branch-deep-linking):\n  \n    (function (b, r, a, n, c, h, _, s, d, k) { if (!b[n] || !b[n]._q) { for (; s In this case you have to add the branch-latest.min.js to this directory: assets/scripts/branch-latest.min.js. You can also use a CDN or other website. Just change the src!\nCreate a Branch Handle Service\nI recommend that you create a branch-handle.service.ts to handle all Branch.io related \nIn your app.component.ts add:\nimport { Platform } from '@ionic/angular';\nimport { BranchHandleService } from './services/branch-handle.service';\n\nconstructor(\n    ...\n    private platform: Platform,\n    private branchHandler: BranchHandleService,\n    ...\n) {\n    ...\n    this.initializeApp();\n    ...\n}\n\nasync initializeApp() {\n    await this.platform.ready();\n    ...\n    this.branchHandler.init();\n}The BranchHandleService could be like\nimport { Injectable } from '@angular/core';\nimport { BranchService } from '@innomobile/attribution';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BranchHandleService {\n    constructor(\n        private branch: BranchService,\n    ) {\n    }\n\n    async init() {\n        try {\n            const branchData = await this.branch.initSession();\n            this.checkData(branchData);\n        } catch (error) {\n            console.log('[BRANCH] ERROR', error);\n        }\n    }\n\n    checkData(data) {\n        /* Example of deep link data of Branch.io */\n        /*\n        data = {\n            '~creation_source': 5,\n            '+click_timestamp': 1541443185,\n            '$identity_id': '588028323188499933',\n            'userId': 'asfsaf',\n            '+clicked_branch_link': true,\n            '$one_time_use': false,\n            '~id': '588051199941949836',\n            '~campaign': 'Invite',\n            '$canonical_url': 'http://localhost:4200/63cc1d35',\n            '+is_first_session': true,\n            '~referring_link': 'https://xyz.app.link/ARMy3izrBR',\n            '~channel': 'viral',\n        };*/\n        // read deep link data\n        console.log('[BRANCH] Deep Link Data: ', data);\n        if (!data) {\n            return;\n        }\n        if (data['+clicked_branch_link']) {\n            // Add your code here\n        }\n    }\n\n    /**\n     * Set User Id\n     **/\n    setIdentity(userId) {\n        this.branch.setIdentity(userId);\n    }\n\n}As described in \"Add Branch.io for Web / PWA\" you only need  this.branch.initSession(); - based on the platform (Android, iOS, Web) it will handle the session correctly!\nOverview methods\ninitSession(): Promise;\ngetSession(): Promise;\nsetIdentity(userId: any): Promise;\nshareLink(options: BranchShareOptions): Promise;\nshare(subject: string, message: string, analytics: BranchIoAnalytics, properties: BranchIoProperties): Promise;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AttributionModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APPSFLYER_CONFIG   (src/.../attribution.module.ts)\n                        \n                        \n                            BRANCH_CONFIG   (src/.../attribution.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/attribution.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            APPSFLYER_CONFIG\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        APPSFLYER_CONFIG:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('Appsflyer Config')\n                        \n                    \n\n                \n                    \n                        Appsflyer Config Token\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            BRANCH_CONFIG\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BRANCH_CONFIG:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('Branch Config')\n                        \n                    \n\n                \n                    \n                        Branch Config Token\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
